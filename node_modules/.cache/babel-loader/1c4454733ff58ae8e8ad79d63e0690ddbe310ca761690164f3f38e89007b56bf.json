{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./CustomStatusBar.css';// Ensure you have a corresponding CSS file\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const CustomStatusBar=_ref=>{let{gridApi}=_ref;const[newPresetName,setNewPresetName]=useState('');const[filterPresets,setFilterPresets]=useState(JSON.parse(localStorage.getItem('filterPresets'))||{});useEffect(()=>{localStorage.setItem('filterPresets',JSON.stringify(filterPresets));},[filterPresets]);const resetFilters=()=>{if(gridApi){gridApi.setFilterModel({});localStorage.removeItem('gridFilters');}};const saveFilterPreset=()=>{if(gridApi&&newPresetName){const currentFilters=gridApi.getFilterModel();setFilterPresets({...filterPresets,[newPresetName]:currentFilters});setNewPresetName('');}};const applyFilterPreset=presetName=>{if(gridApi&&presetName in filterPresets){gridApi.setFilterModel(filterPresets[presetName]);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"status-bar\",children:[/*#__PURE__*/_jsxs(\"select\",{className:\"status-bar-select\",onChange:e=>applyFilterPreset(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{children:\"Select a filter preset\"}),Object.keys(filterPresets).map(presetName=>/*#__PURE__*/_jsx(\"option\",{value:presetName,children:presetName},presetName))]}),/*#__PURE__*/_jsx(\"input\",{className:\"status-bar-input\",value:newPresetName,onChange:e=>setNewPresetName(e.target.value),placeholder:\"New preset name\"}),/*#__PURE__*/_jsx(\"button\",{className:\"status-bar-button\",onClick:saveFilterPreset,children:\"Save current filters as preset\"}),/*#__PURE__*/_jsx(\"button\",{className:\"status-bar-button\",onClick:resetFilters,children:\"Reset Filters\"})]});};export default CustomStatusBar;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","CustomStatusBar","_ref","gridApi","newPresetName","setNewPresetName","filterPresets","setFilterPresets","JSON","parse","localStorage","getItem","setItem","stringify","resetFilters","setFilterModel","removeItem","saveFilterPreset","currentFilters","getFilterModel","applyFilterPreset","presetName","className","children","onChange","e","target","value","Object","keys","map","placeholder","onClick"],"sources":["/Users/kanishk/Desktop/aggrid/src/CustomStatusBar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './CustomStatusBar.css'; // Ensure you have a corresponding CSS file\n\nconst CustomStatusBar = ({ gridApi }) => {\n    const [newPresetName, setNewPresetName] = useState('');\n    const [filterPresets, setFilterPresets] = useState(JSON.parse(localStorage.getItem('filterPresets')) || {});\n\n    useEffect(() => {\n        localStorage.setItem('filterPresets', JSON.stringify(filterPresets));\n    }, [filterPresets]);\n\n    const resetFilters = () => {\n        if (gridApi) {\n            gridApi.setFilterModel({});\n            localStorage.removeItem('gridFilters');\n        }\n    };\n\n    const saveFilterPreset = () => {\n        if (gridApi && newPresetName) {\n            const currentFilters = gridApi.getFilterModel();\n            setFilterPresets({ ...filterPresets, [newPresetName]: currentFilters });\n            setNewPresetName('');\n        }\n    };\n\n    const applyFilterPreset = (presetName) => {\n        if (gridApi && presetName in filterPresets) {\n            gridApi.setFilterModel(filterPresets[presetName]);\n        }\n    };\n\n    return (\n        <div className=\"status-bar\">\n            <select className=\"status-bar-select\" onChange={e => applyFilterPreset(e.target.value)}>\n                <option>Select a filter preset</option>\n                {Object.keys(filterPresets).map(presetName => (\n                    <option key={presetName} value={presetName}>{presetName}</option>\n                ))}\n            </select>\n            <input \n                className=\"status-bar-input\"\n                value={newPresetName} \n                onChange={e => setNewPresetName(e.target.value)} \n                placeholder=\"New preset name\" \n            />\n            <button className=\"status-bar-button\" onClick={saveFilterPreset}>Save current filters as preset</button>\n            <button className=\"status-bar-button\" onClick={resetFilters}>Reset Filters</button>\n        </div>\n    );\n};\n\nexport default CustomStatusBar;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,uBAAuB,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEhC,KAAM,CAAAC,eAAe,CAAGC,IAAA,EAAiB,IAAhB,CAAEC,OAAQ,CAAC,CAAAD,IAAA,CAChC,KAAM,CAACE,aAAa,CAAEC,gBAAgB,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CACtD,KAAM,CAACW,aAAa,CAAEC,gBAAgB,CAAC,CAAGZ,QAAQ,CAACa,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC,CAAC,EAAI,CAAC,CAAC,CAAC,CAE3Gf,SAAS,CAAC,IAAM,CACZc,YAAY,CAACE,OAAO,CAAC,eAAe,CAAEJ,IAAI,CAACK,SAAS,CAACP,aAAa,CAAC,CAAC,CACxE,CAAC,CAAE,CAACA,aAAa,CAAC,CAAC,CAEnB,KAAM,CAAAQ,YAAY,CAAGA,CAAA,GAAM,CACvB,GAAIX,OAAO,CAAE,CACTA,OAAO,CAACY,cAAc,CAAC,CAAC,CAAC,CAAC,CAC1BL,YAAY,CAACM,UAAU,CAAC,aAAa,CAAC,CAC1C,CACJ,CAAC,CAED,KAAM,CAAAC,gBAAgB,CAAGA,CAAA,GAAM,CAC3B,GAAId,OAAO,EAAIC,aAAa,CAAE,CAC1B,KAAM,CAAAc,cAAc,CAAGf,OAAO,CAACgB,cAAc,CAAC,CAAC,CAC/CZ,gBAAgB,CAAC,CAAE,GAAGD,aAAa,CAAE,CAACF,aAAa,EAAGc,cAAe,CAAC,CAAC,CACvEb,gBAAgB,CAAC,EAAE,CAAC,CACxB,CACJ,CAAC,CAED,KAAM,CAAAe,iBAAiB,CAAIC,UAAU,EAAK,CACtC,GAAIlB,OAAO,EAAIkB,UAAU,GAAI,CAAAf,aAAa,CAAE,CACxCH,OAAO,CAACY,cAAc,CAACT,aAAa,CAACe,UAAU,CAAC,CAAC,CACrD,CACJ,CAAC,CAED,mBACIrB,KAAA,QAAKsB,SAAS,CAAC,YAAY,CAAAC,QAAA,eACvBvB,KAAA,WAAQsB,SAAS,CAAC,mBAAmB,CAACE,QAAQ,CAAEC,CAAC,EAAIL,iBAAiB,CAACK,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE,CAAAJ,QAAA,eACnFzB,IAAA,WAAAyB,QAAA,CAAQ,wBAAsB,CAAQ,CAAC,CACtCK,MAAM,CAACC,IAAI,CAACvB,aAAa,CAAC,CAACwB,GAAG,CAACT,UAAU,eACtCvB,IAAA,WAAyB6B,KAAK,CAAEN,UAAW,CAAAE,QAAA,CAAEF,UAAU,EAA1CA,UAAmD,CACnE,CAAC,EACE,CAAC,cACTvB,IAAA,UACIwB,SAAS,CAAC,kBAAkB,CAC5BK,KAAK,CAAEvB,aAAc,CACrBoB,QAAQ,CAAEC,CAAC,EAAIpB,gBAAgB,CAACoB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE,CAChDI,WAAW,CAAC,iBAAiB,CAChC,CAAC,cACFjC,IAAA,WAAQwB,SAAS,CAAC,mBAAmB,CAACU,OAAO,CAAEf,gBAAiB,CAAAM,QAAA,CAAC,gCAA8B,CAAQ,CAAC,cACxGzB,IAAA,WAAQwB,SAAS,CAAC,mBAAmB,CAACU,OAAO,CAAElB,YAAa,CAAAS,QAAA,CAAC,eAAa,CAAQ,CAAC,EAClF,CAAC,CAEd,CAAC,CAED,cAAe,CAAAtB,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}